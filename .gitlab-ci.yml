# This is a sample gitlab CI configuration showing how to use Cloudrail
# to test Terraform content. It will actually go and test all the cases included in this repo.

# Based on example: https://gitlab.com/gitlab-org/configure/examples/gitlab-terraform-aws/-/blob/master/.gitlab-ci.yml

image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
variables:
  TEST_ROOT: ${CI_PROJECT_DIR}/test
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_PROJECT_NAME}

before_script:
  - cd ${TEST_ROOT}

stages:
  - prepare
  - plan
#  - cloudrail

init:
  stage: prepare
  script:
    - find . -name "main.tf" | sed 's/\/main.tf//' | while read case; do PRECWD=$PWD ; cd $case ; terraform init ; cd $PRECWD ; done

plan:
  stage: plan
  script:
    - find . -name "main.tf" | sed 's/\/main.tf//' | while read case; do PRECWD=$PWD ; cd $case ; terraform plan -out=plan.out ; cd $PRECWD ; done
  artifacts:
    name: "$CI_JOB_NAME"
    when: always
    paths:
      - ./**
    reports:
      junit: plan.out



